"""
–§–∞–π–ª: views.py
–û–ø–∏—Å–∞–Ω–∏–µ: Django views –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —É—Ä–æ–∫–∞–º–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞

–≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ view-—Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è lessons:
- lessons_board_view() - –≥–ª–∞–≤–Ω–∞—è –¥–æ—Å–∫–∞ —Å –±–ª–æ–∫–∞–º–∏ —É—Ä–æ–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- generate_block_view() - AJAX –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –±–ª–æ–∫–∞ —á–µ—Ä–µ–∑ AI
- lesson_detail_view() - –¥–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Ä–æ–∫–∞ —Å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º–∏
- save_progress_view() - AJAX –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–¥–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
- complete_lesson_view() - AJAX —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —É—Ä–æ–∫–∞

–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã:
- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è –≤—Å–µ—Ö views
- AJAX endpoints –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
- Django —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
- –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
"""

from django.shortcuts import render, redirect, get_object_or_404
from django.http import JsonResponse
from django.views.decorators.http import require_http_methods
from django.contrib.auth.decorators import login_required
from django.utils import timezone
from django.db.models import Q
from django.db import transaction
import json
import logging

from .models import LessonBlock, Lesson, LessonProgress
from .services.lesson_ai_service import LessonAIService
from .utils.progress import (
    update_profile_stats,
    unlock_next_lesson,
    check_block_completion,
    calculate_lesson_score
)
from .utils.validators import check_answer

# –õ–æ–≥–≥–µ—Ä –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫
logger = logging.getLogger(__name__)


def lessons_board_view(request):
    """
    –ì–ª–∞–≤–Ω–∞—è –¥–æ—Å–∫–∞ —Å –±–ª–æ–∫–∞–º–∏ —É—Ä–æ–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç:
    - –í—Å–µ –±–ª–æ–∫–∏ —É—Ä–æ–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ü–≤–µ—Ç–æ–≤–æ–π –∏–Ω–¥–∏–∫–∞—Ü–∏–µ–π —Å—Ç–∞—Ç—É—Å–∞
    - –£—Ä–æ–∫–∏ –≤–Ω—É—Ç—Ä–∏ –∫–∞–∂–¥–æ–≥–æ –±–ª–æ–∫–∞ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
    - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (streak, —É—Ä–æ–∫–∏, —Å–ª–æ–≤–∞)
    - –ö–Ω–æ–ø–∫—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –±–ª–æ–∫–∞
    
    URL: /lessons/board/
    Template: lessons/board.html
    """
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    if not request.user.is_authenticated:
        return redirect('login')
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –±–ª–æ–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π (prefetch_related)
    blocks = LessonBlock.objects.filter(
        user=request.user
    ).prefetch_related('lessons').order_by('order')
    
    # –≠–¢–ê–ü 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –±–ª–æ–∫–∞
    blocks_data = []
    for block in blocks:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —É—Ä–æ–∫–∏ –±–ª–æ–∫–∞
        lessons = block.lessons.all().order_by('order')
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –±–ª–æ–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç–∞—Ç—É—Å–∞
        if block.is_passed:
            # –ë–ª–æ–∫ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω (–≤—Å–µ —É—Ä–æ–∫–∏ >= 80%)
            color_class = 'bg-green-100 border-green-300'
        elif block.is_completed and not block.is_passed:
            # –ë–ª–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω, –Ω–æ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω (–µ—Å—Ç—å —É—Ä–æ–∫–∏ < 80%)
            color_class = 'bg-red-100 border-red-300'
        else:
            # –ë–ª–æ–∫ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è
            color_class = 'bg-gray-50 border-gray-300'
        
        # –≠–¢–ê–ü 2: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É—Ä–æ–∫–∞
        lessons_data = []
        for lesson in lessons:
            # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å —É—Ä–æ–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            progress = LessonProgress.objects.filter(
                user=request.user,
                lesson=lesson
            ).first()
            
            # –ö–∞—Ä—Ç–∞ –∏–∫–æ–Ω–æ–∫ –¥–ª—è —Ç–∏–ø–æ–≤ —É—Ä–æ–∫–æ–≤
            icon_map = {
                'grammar': 'üìñ',     # –ì—Ä–∞–º–º–∞—Ç–∏–∫–∞
                'vocabulary': 'üìù',  # –õ–µ–∫—Å–∏–∫–∞
                'reading': 'üìö'      # –ß—Ç–µ–Ω–∏–µ
            }
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º CSS –∫–ª–∞—Å—Å —Å—Ç–∞—Ç—É—Å–∞ —É—Ä–æ–∫–∞
            if progress and progress.is_completed:
                if progress.best_score >= 80:
                    # –£—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω
                    status_class = 'text-green-600 font-semibold'
                else:
                    # –£—Ä–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω, –Ω–æ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω
                    status_class = 'text-red-600 font-semibold'
            elif lesson.is_unlocked:
                # –£—Ä–æ–∫ –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è
                status_class = 'text-blue-600'
            else:
                # –£—Ä–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
                status_class = 'text-gray-400'
            
            # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–∞
            lessons_data.append({
                'id': lesson.id,
                'title': lesson.title,
                'icon': icon_map.get(lesson.lesson_type, 'üìÑ'),
                'is_unlocked': lesson.is_unlocked,
                'status_class': status_class,
                'best_score': progress.best_score if progress else 0
            })
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –±–ª–æ–∫–∞
        blocks_data.append({
            'id': block.id,
            'title': block.title,
            'description': block.description,
            'level': block.level,
            'difficulty_level': block.difficulty_level,
            'order': block.order,
            'color_class': color_class,
            'is_completed': block.is_completed,
            'is_passed': block.is_passed,
            'completion_percent': block.completion_percent,
            'lessons': lessons_data
        })
    
    # –≠–¢–ê–ü 3: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –±–ª–æ–∫–∞
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –±–ª–æ–∫–æ–≤
    has_incomplete_block = LessonBlock.objects.filter(
        user=request.user,
        is_completed=False
    ).exists()
    
    # –ö–Ω–æ–ø–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞, –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π –±–ª–æ–∫
    button_state = {
        'disabled': 'disabled' if has_incomplete_block else '',
        'text': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –±–ª–æ–∫' if has_incomplete_block else '‚ú® –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π –±–ª–æ–∫'
    }
    
    # –≠–¢–ê–ü 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        profile = request.user.profile
        stats = {
            'days_streak': profile.days_streak,
            'lessons_completed': profile.lessons_completed,
            'words_learned': profile.words_learned
        }
    except AttributeError:
        # –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞—ë–º –µ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        from user.models import UserProfile
        profile = UserProfile.objects.create(user=request.user)
        stats = {
            'days_streak': 0,
            'lessons_completed': 0,
            'words_learned': 0
        }
    
    # –≠–¢–ê–ü 5: –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è —à–∞–±–ª–æ–Ω–∞
    context = {
        'blocks': blocks_data,
        'button': button_state,
        'stats': stats,
        'has_blocks': blocks.exists()
    }
    
    return render(request, 'lessons/board.html', context)


@require_http_methods(["POST"])
def generate_block_view(request):
    """
    AJAX endpoint –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –±–ª–æ–∫–∞ —É—Ä–æ–∫–æ–≤ —á–µ—Ä–µ–∑ AI
    
    –ü—Ä–æ—Ü–µ—Å—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:
    1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –±–ª–æ–∫–æ–≤
    3. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–ª–æ–∫–∞ —á–µ—Ä–µ–∑ LessonAIService (~20-30 —Å–µ–∫—É–Ω–¥)
    4. –í–æ–∑–≤—Ä–∞—Ç JSON –æ—Ç–≤–µ—Ç–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
    
    URL: /lessons/generate/
    Method: POST
    Response: JSON {success, block_id?, message?, error?}
    """
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    if not request.user.is_authenticated:
        return JsonResponse({'success': False, 'error': '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω'}, status=401)
    
    try:
        # –≠–¢–ê–ü 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –±–ª–æ–∫–æ–≤
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ–∫—É—â–∏–π –±–ª–æ–∫ –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –Ω–æ–≤–æ–≥–æ
        has_incomplete = LessonBlock.objects.filter(
            user=request.user,
            is_completed=False
        ).exists()
        
        if has_incomplete:
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π –±–ª–æ–∫
            return JsonResponse({
                'success': False,
                'error': '–ó–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â–∏–π –±–ª–æ–∫ –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –Ω–æ–≤–æ–≥–æ'
            }, status=400)
        
        # –≠–¢–ê–ü 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–ª–æ–∫–∞ —á–µ—Ä–µ–∑ AI —Å–µ—Ä–≤–∏—Å
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
        service = LessonAIService()
        block = service.generate_block(request.user)
        
        # –≠–¢–ê–ü 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        if not block:
            # AI –Ω–µ —Å–º–æ–≥ —Å–æ–∑–¥–∞—Ç—å –±–ª–æ–∫ (–æ—à–∏–±–∫–∞ API, –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏)
            return JsonResponse({
                'success': False,
                'error': '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –±–ª–æ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
            }, status=500)
        
        # –≠–¢–ê–ü 4: –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
        return JsonResponse({
            'success': True,
            'block_id': block.id,
            'message': '–ë–ª–æ–∫ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!'
        })
        
    except Exception as e:
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
        logger.error(f"Error generating block for user {request.user.username}: {str(e)}")
        return JsonResponse({
            'success': False,
            'error': '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
        }, status=500)


def lesson_detail_view(request, lesson_id):
    """
    –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Ä–æ–∫–∞ —Å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º–∏
    
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç:
    - –ö–æ–Ω—Ç–µ–Ω—Ç —É—Ä–æ–∫–∞ (–ø—Ä–∞–≤–∏–ª–∞ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏ / —Å–ª–æ–≤–∞ / —Ç–µ–∫—Å—Ç –¥–ª—è —á—Ç–µ–Ω–∏—è)
    - 5 —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞–Ω–∏–π
    - –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —É—Ä–æ–∫—É
    - –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —É—Ä–æ–∫–∞
    
    –ü—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:
    - –£—Ä–æ–∫ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    - –£—Ä–æ–∫ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è
    
    URL: /lessons/lesson/<int:lesson_id>/
    Template: lessons/lesson_detail.html + component template
    """
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    if not request.user.is_authenticated:
        return redirect('login')
    
    # –ü–æ–ª—É—á–∞–µ–º —É—Ä–æ–∫ –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 404
    lesson = get_object_or_404(Lesson, id=lesson_id)
    
    # –≠–¢–ê–ü 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —É—Ä–æ–∫ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –±–ª–æ–∫—É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if lesson.block.user != request.user:
        return redirect('lessons_board')
    
    # –≠–¢–ê–ü 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —É—Ä–æ–∫–∞
    # –£—Ä–æ–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è
    if not lesson.is_unlocked:
        return redirect('lessons_board')
    
    # –≠–¢–ê–ü 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —É—Ä–æ–∫–∞
    # –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è –∑–∞–ø–∏—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    progress, created = LessonProgress.objects.get_or_create(
        user=request.user,
        lesson=lesson,
        defaults={'exercises_data': {}}
    )
    
    # –≠–¢–ê–ü 4: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
    # –†–∞–∑–Ω—ã–µ —Ç–∏–ø—ã —É—Ä–æ–∫–æ–≤ –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Ä–∞–∑–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    component_map = {
        'grammar': 'lessons/components/grammar.html',      # –ì—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–∫
        'vocabulary': 'lessons/components/vocabulary.html', # –£—Ä–æ–∫ –ª–µ–∫—Å–∏–∫–∏
        'reading': 'lessons/components/reading.html'        # –£—Ä–æ–∫ —á—Ç–µ–Ω–∏—è
    }
    
    # –≠–¢–ê–ü 5: –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è —à–∞–±–ª–æ–Ω–∞
    context = {
        'lesson': lesson,
        'progress': progress,
        'block': lesson.block,
        'content': lesson.content,
        'component_template': component_map.get(lesson.lesson_type, 'lessons/components/grammar.html')
    }
    
    return render(request, 'lessons/lesson_detail.html', context)


@require_http_methods(["POST"])
def save_progress_view(request):
    """
    AJAX endpoint –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–¥–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è
    
    –í–ê–ñ–ù–û: –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ç–æ–ª—å–∫–æ –ü–†–û–í–ï–†–Ø–ï–¢ –æ—Ç–≤–µ—Ç, –Ω–æ –ù–ï —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ –ë–î!
    –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —É—Ä–æ–∫–∞ (complete_lesson_view).
    
    –ü—Ä–æ—Ü–µ—Å—Å:
    1. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è (lesson_id, exercise_id, user_answer)
    2. –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    3. –ü–æ–∏—Å–∫ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–Ω—Ç–µ —É—Ä–æ–∫–∞
    4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞ —á–µ—Ä–µ–∑ check_answer()
    5. –í–æ–∑–≤—Ä–∞—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º
    
    URL: /lessons/save-progress/
    Method: POST
    Body: JSON {lesson_id, exercise_id, user_answer}
    Response: JSON {is_correct, explanation}
    """
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    if not request.user.is_authenticated:
        return JsonResponse({'success': False, 'error': '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω'}, status=401)
    
    try:
        # –≠–¢–ê–ü 1: –ü–∞—Ä—Å–∏–Ω–≥ JSON –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
        data = json.loads(request.body)
        lesson_id = data.get('lesson_id')
        exercise_id = data.get('exercise_id')
        user_answer = data.get('user_answer')
        
        # –≠–¢–ê–ü 2: –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        if not lesson_id or not exercise_id or user_answer is None:
            return JsonResponse({
                'success': False,
                'error': '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã'
            }, status=400)
        
        # –≠–¢–ê–ü 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —É—Ä–æ–∫–∞
        lesson = get_object_or_404(Lesson, id=lesson_id)
        
        # –≠–¢–ê–ü 4: –ü–æ–∏—Å–∫ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–Ω—Ç–µ —É—Ä–æ–∫–∞
        exercises = lesson.content.get('exercises', [])
        exercise = None
        
        # –ò—â–µ–º —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –ø–æ ID
        for ex in exercises:
            if ex['id'] == exercise_id:
                exercise = ex
                break
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ
        if not exercise:
            return JsonResponse({'success': False, 'error': '–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ'}, status=404)
        
        # –≠–¢–ê–ü 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–≤–µ—Ç–∞
        correct_answer = exercise['correct_answer']
        is_correct = check_answer(user_answer, correct_answer)
        
        # –≠–¢–ê–ü 6: –í–æ–∑–≤—Ä–∞—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        # –ù–ï –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç - —Ç–æ–ª—å–∫–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ
        return JsonResponse({
            'is_correct': is_correct,
            'explanation': exercise.get('explanation', ''),
        })
        
    except json.JSONDecodeError:
        # –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON
        return JsonResponse({'success': False, 'error': '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö'}, status=400)
    except Exception as e:
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
        logger.error(f"Error saving progress: {str(e)}")
        return JsonResponse({'success': False, 'error': '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'}, status=500)


@require_http_methods(["POST"])
def complete_lesson_view(request):
    """
    AJAX endpoint –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —É—Ä–æ–∫–∞
    
    –≠—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è:
    - –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∏—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ –≤—Å–µ–º —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º
    - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ –ë–î (–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏)
    - –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ—Ñ–∏–ª—è (–ø—Ä–∏ >= 80%)
    - –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫
    - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—Å–µ–≥–æ –±–ª–æ–∫–∞
    
    –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ö–æ–¥–Ω–æ–π –±–∞–ª–ª: 80%
    
    URL: /lessons/complete-lesson/
    Method: POST
    Body: JSON {lesson_id, exercises: {ex1: {...}, ex2: {...}, ...}}
    Response: JSON {success, score, is_first_completion, next_lesson_unlocked, message}
    """
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    if not request.user.is_authenticated:
        return JsonResponse({'success': False, 'error': '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω'}, status=401)
    
    try:
        # –≠–¢–ê–ü 1: –ü–∞—Ä—Å–∏–Ω–≥ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        data = json.loads(request.body)
        lesson_id = data.get('lesson_id')
        exercises_data = data.get('exercises', {})
        
        # –í–∞–ª–∏–¥–∞—Ü–∏—è lesson_id
        if not lesson_id:
            return JsonResponse({
                'success': False,
                'error': '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç lesson_id'
            }, status=400)
        
        # –í–∞–ª–∏–¥–∞—Ü–∏—è exercises_data (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–ª–æ–≤–∞—Ä—å)
        if not isinstance(exercises_data, dict):
            return JsonResponse({
                'success': False,
                'error': '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç exercises_data'
            }, status=400)
        
        # –≠–¢–ê–ü 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —É—Ä–æ–∫–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
        lesson = get_object_or_404(Lesson, id=lesson_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —É—Ä–æ–∫ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if lesson.block.user != request.user:
            return JsonResponse({'success': False, 'error': '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω'}, status=403)
        
        # –≠–¢–ê–ü 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        progress, created = LessonProgress.objects.get_or_create(
            user=request.user,
            lesson=lesson
        )
        
        # –≠–¢–ê–ü 4: –ü–æ–¥—Å—á–µ—Ç –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        score = calculate_lesson_score(exercises_data, lesson.content)
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–≤–æ–µ –ª–∏ —ç—Ç–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —É—Ä–æ–∫–∞ (–¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏)
        is_first_completion = not progress.is_completed
        
        # –≠–¢–ê–ü 5: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ –ë–î (–∞—Ç–æ–º–∞—Ä–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è)
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
        with transaction.atomic():
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏
            progress.current_score = score
            progress.exercises_data = exercises_data
            progress.attempts += 1
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –ª—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –µ—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –≤—ã—à–µ
            if score > progress.best_score:
                progress.best_score = score
            
            # –≠–¢–ê–ü 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —É—Ä–æ–∫–∞ (>= 80%)
            if score >= 80:
                # –£—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!
                if not progress.is_completed:
                    progress.is_completed = True
                    progress.first_completed_at = timezone.now()
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
                progress.save()
                
                # –≠–¢–ê–ü 7: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è
                # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫–∏ —É—Ä–æ–∫–æ–≤ –∏ —Å–ª–æ–≤
                update_profile_stats(request.user, lesson, score, is_first_completion)
                
                # –≠–¢–ê–ü 8: –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–∫–∞ –≤ –±–ª–æ–∫–µ
                next_lesson = unlock_next_lesson(lesson)
                
                # –≠–¢–ê–ü 9: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ–≥–æ –±–ª–æ–∫–∞
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω—ã –ª–∏ –≤—Å–µ 3 —É—Ä–æ–∫–∞
                check_block_completion(lesson.block)
                
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
                return JsonResponse({
                    'success': True,
                    'score': score,
                    'is_first_completion': is_first_completion,
                    'next_lesson_unlocked': next_lesson is not None,
                    'message': '–£—Ä–æ–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω! üéâ'
                })
            else:
                # –£—Ä–æ–∫ –ù–ï –ø—Ä–æ–π–¥–µ–Ω (< 80%)
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ø—ã—Ç–∫—É, –Ω–æ –Ω–µ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                progress.save()
                
                return JsonResponse({
                    'success': True,
                    'score': score,
                    'is_first_completion': False,
                    'next_lesson_unlocked': False,
                    'message': f'–†–µ–∑—É–ª—å—Ç–∞—Ç: {score}%. –ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 80% –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.'
                })
        
    except json.JSONDecodeError:
        # –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON
        return JsonResponse({'success': False, 'error': '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö'}, status=400)
    except Exception as e:
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
        logger.error(f"Error completing lesson: {str(e)}")
        return JsonResponse({'success': False, 'error': '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞'}, status=500)
